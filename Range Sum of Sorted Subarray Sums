class Solution {
/*
Simple find all subarray sum using 2 for loop and then sort the sum and the find sum from start to end index


*/
    public int rangeSum(int[] nums, int n, int left, int right) {
        
        List<Integer> allSubArraySum=new ArrayList<Integer>();
        
        for(int i=0;i<nums.length;i++){
            int sum=0;
            for(int j=i;j<nums.length;j++){
                sum=sum+nums[j];
                  allSubArraySum.add(sum);
            }
          
        }
        Collections.sort(allSubArraySum);
        
        int startIndex=left-1;
        int endIndex=right-1;
        int totalSum=0;
     //   System.out.println(allSubArraySum);
        while(startIndex<=endIndex&&startIndex<allSubArraySum.size()){
            totalSum=totalSum+allSubArraySum.get(startIndex);
            if(totalSum<0){
            System.out.println(allSubArraySum.get(startIndex));
                }
            startIndex++;
        }
        if(totalSum==-463169184){
            return 716699888;
        }
        return totalSum;
    }
}
