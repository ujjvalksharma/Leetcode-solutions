class Solution {
    
    Map<String,Integer> dp = new HashMap<>();
    
    public int findTargetSumWaysHelper(int index, int currentSum, int[] nums, int target) {
        
        if(index >= nums.length) {
            
            if(currentSum == target) {
                return 1;
            }
            
            return 0;
        }
        
        String key = index+","+currentSum;
        
        if(dp.containsKey(key)) {
            return dp.get(key);
        }
        
         int count1 = findTargetSumWaysHelper(index + 1, currentSum + nums[index], nums, target);
         int count2 = findTargetSumWaysHelper(index + 1, currentSum - nums[index], nums, target);
        
        int totalCount = count1 + count2;
        
        dp.put(key, totalCount);
        
        return totalCount;
        
    }
    public int findTargetSumWays(int[] nums, int target) {
        return findTargetSumWaysHelper(0, 0, nums, target);
    }
}
