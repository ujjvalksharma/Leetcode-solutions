public class Solution {
    // you need to treat n as an unsigned value
    public int hammingWeight(int n) {
        
        int count=0;

    //    System.out.println(n);
        while(n!=0)
        {
            if((n&1) > 0) {
                count++;
            }
            n=n>>>1; //remove rightmost bit and shift other to right
        }
        return count;
    }
}
/*public class Solution {
    // you need to treat n as an unsigned value
    public int hammingWeight(int n) {
       // System.out.println("n: "+n);
        
        int k = 1<<30; //0000000.....1
        int totalOnes = 0;
        for(int i=1; i<=32; i++) {
            int num = 1<<i; //shift bits to left by ith position and it would look something like 0001...k0
            if((num&n) > 0) {
                totalOnes++;
            }
        }
        return totalOnes;
    }
}*/
