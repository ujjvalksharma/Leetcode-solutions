/*
// put a max value by iteration from 10^9 to 1 using binary search and verify if all sub-array sum is less than max value

*/
class Solution {
    
    
      public boolean verifyMaxValueLessThanAllubArraySum(int mid ,int[] nums , int totalPartitions){
        int total=0;
        int sub_array=0;
        int size=nums.length;
        for(int i=0;i<size;i++){
            if(nums[i]>mid)
                return false;
            if(total+nums[i]<=mid)
                total+=nums[i];
            else{
                sub_array++;
                total=nums[i];
            }
        }
        sub_array++;
        return (sub_array<=totalPartitions);
    }
    
    
    public int splitArray(int[] nums, int m) {
        
         int l=0;
        int r=(int)(1e9+1);
        while(l<r){
            int mid=(l+r)/2;
            if(verifyMaxValueLessThanAllubArraySum(mid,nums,m)) // verify max value in all subarray
                r=mid; // mid value did not work try for higher value
            else
                l=mid+1; // try for lesser value if a mid value worked
        }
        return l;
        
    }
}
