class Solution {
    public int countHomogenous(String s) {
        
      /*
      a,b,b,c,c,c,a,a
    [ 1,2,1,3,2,1,2,1]
    
    In this question we use idea of prefix sum from backward.
    intially all prefix sum element have atleast 1 character, so we insert one
    example 
    0,1,2,3,4
    c,c,c,a,a
             
             we know that 'a' at index 4 can form string with itself as there is nothing forward
             'a' at index 3 matches in values with 'a' at index 4 so it can form string with all those character that 'a' at index formed 4 along with itself. thus preSum[3]=preSum[3]+preSum[4] (itself+other string that can be formed).
      
      */
        int totalHomogenousStr=0;
        final int MOD=1000000007;
        int[] prevSum=new int[s.length()];
        Arrays.fill(prevSum,1);
        for(int i=prevSum.length-2;i>=0;i--){
            if(s.charAt(i+1)==s.charAt(i)){
                prevSum[i]+=prevSum[i+1];
            }
            
        }
        
        for(int sum: prevSum){
            totalHomogenousStr=(totalHomogenousStr+sum)%MOD;
        }
        
        
        System.out.println(Arrays.toString(prevSum));
        return totalHomogenousStr;
    }
}
