class NumArray {

    int[] fenwickArr;
    int[] arr;
    
    public int getRightMostSetBitIndex(int index) {
        
        for(int i=0; i<32; i++) {
            if(((1<<i)&index) != 0 ) {
                return i;
            }
        }
        return 0;
    }
    
    public int getSum(int start, int end, int[] prefixSumOfArr) {
        
        int sum1 = prefixSumOfArr[end];
        int sum2 = 0;
        
        if(start - 1 > 0) {
            sum2 = prefixSumOfArr[start - 1];
        }
        
        return sum1 - sum2;
    }
    
    public int getPrefixSum(int[] fenwickArr, int index) {
        int sum = 0;
        
        while(index > 0) {
            
            sum += fenwickArr[index];
            int rightMostSetBitIndex = getRightMostSetBitIndex(index);
            index = index - (int) Math.pow(2, rightMostSetBitIndex) + 1;
            index--;
            
        }
        
        return sum;
    }
    public NumArray(int[] nums) {
        
        this.fenwickArr = new int[nums.length + 1];
        this.arr = new int[nums.length + 1];
        int[] prefixSumOfArr = new int[arr.length];
        
        for(int i=1; i<=nums.length; i++) {
            
            arr[i] = nums[i-1];
            
        }
        
        for(int i=1; i<prefixSumOfArr.length; i++) {
            prefixSumOfArr[i] = prefixSumOfArr[i - 1] + arr[i];
        }
        
        for(int i=1; i<=nums.length; i++) {
            
            int high = i;
            int rightMostSetBitIndex = getRightMostSetBitIndex(i);
            int low = high - (int) Math.pow(2, rightMostSetBitIndex) + 1;
            int sum = getSum(low, high, prefixSumOfArr);
            fenwickArr[high] = sum;
            
        }
        
        
    }
    
    public int sumRange(int left, int right) {
        
        left++;
        right++;
        
        int sum1 = getPrefixSum(fenwickArr, right);
        int sum2 = getPrefixSum(fenwickArr, left - 1);
        
        return sum1 - sum2;
        
    }
}

/**
 * Your NumArray object will be instantiated and called as such:
 * NumArray obj = new NumArray(nums);
 * int param_1 = obj.sumRange(left,right);
 */

class NumArray {

    int totalSum;
    int[] prefixSum;
    int[] suffixSum;
    
    public NumArray(int[] nums) {
        
        for(int num : nums) {
            totalSum += num;
        }
        
        this.prefixSum = new int[nums.length];
        this.suffixSum = new int[nums.length];
        int sum = 0;
        
        for(int i=0; i<nums.length; i++) {
            sum += nums[i];
            prefixSum[i] = sum;
        }
        
        sum = 0;
        
        for(int i=nums.length - 1; i>=0; i--) {
            sum += nums[i];
            suffixSum[i] = sum;
        }
        
    }
    
    public int sumRange(int i, int j) {
        
        int leftIndex = i - 1;
        int rightIndex = j + 1;
        int leftSum = 0;
        int rightSum = 0;
        
        if(leftIndex >=0) {
            leftSum = prefixSum[leftIndex];
        }
        
        if(rightIndex < prefixSum.length) {
            rightSum = suffixSum[rightIndex];
        }
        
        return totalSum - leftSum - rightSum;
    }
}

/**
 * Your NumArray object will be instantiated and called as such:
 * NumArray obj = new NumArray(nums);
 * int param_1 = obj.sumRange(i,j);
 */
/*
Use prefix sum

*/
class NumArray {

    int prevfix[];
    int suffix[];
    int total_sum;
    int arr[];
    public NumArray(int[] nums) {
        
        int sum=0;
        prevfix= new int[nums.length];
        suffix= new int[nums.length];
        arr= new int[nums.length];
        for(int i=0;i<nums.length;i++)
        {
            sum=sum+nums[i];
          prevfix[i]=sum;
            arr[i]=nums[i];
        }
        sum=0;
        for(int i=nums.length-1;i>=0;i--)
        {
            sum=sum+nums[i];
          suffix[i]=sum;
        }
        total_sum=sum;
        
    }
    
    public int sumRange(int i, int j) {
      
      //  System.out
        if(i==0)
   return prevfix[j];
        
        if(j==prevfix.length-1)
   return suffix[i];
        
        if(i==j)
            return arr[i];
        
        return total_sum-prevfix[i-1]-suffix[j+1];
        
    }
}
