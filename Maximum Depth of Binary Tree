/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    int maxDeptCount = 0;
    public void maxDepthHelper(TreeNode root, int count) {
        if(root == null) {
            return;
        }
        maxDeptCount = Math.max(maxDeptCount, count);
        maxDepthHelper(root.left, count + 1);
        maxDepthHelper(root.right, count + 1);
    }
    
    public int maxDepth(TreeNode root) {
        maxDepthHelper(root, 1);
        return maxDeptCount;
    }
}


class Solution {
    int current_dep=0;
    int max_dep=0;
    
    public void preorder(TreeNode root)
    {
        current_dep++;
        if(current_dep>max_dep)
        {
           max_dep= current_dep;
        }
        if(root!=null)
        {
            
            preorder(root.left);
            current_dep--;
            preorder(root.right);
            current_dep--;
        }
        return;
    }
    public int maxDepth(TreeNode root) {
        
        preorder(root);
        
        return max_dep-1;
    }
}
