class Solution {
    private static final Set<Character> VOWELS = 
        new HashSet<>(Arrays.asList('a', 'e', 'i', 'o', 'u'));
    private static final char REPEATED_GOAT_SUFFIX = 'a';
    private static final String GOAT_SUFFIX = "ma";
    private static final String EMPTY_SPACE = " ";
    
    public String toGoatLatin(String s) {
        StringBuilder goatLatinBuilder = new StringBuilder();
        StringBuilder repeatedSuffixBuilder = new StringBuilder();
        String[] words = s.split(EMPTY_SPACE);
        for (String word : words) {
            char firstLetterOfWord = word.charAt(0);
            if (isVowel(firstLetterOfWord)) {
                goatLatinBuilder.append(word);
            } else {
                String wordTail = word.substring(1);
                goatLatinBuilder.append(wordTail);
                goatLatinBuilder.append(firstLetterOfWord);
            }
            goatLatinBuilder.append(GOAT_SUFFIX);
            repeatedSuffixBuilder.append(REPEATED_GOAT_SUFFIX);
            String repeatedSuffix = repeatedSuffixBuilder.toString();
            goatLatinBuilder.append(repeatedSuffix);
            goatLatinBuilder.append(EMPTY_SPACE);
        }
        int trimmedLength = goatLatinBuilder.length() - 1;
        goatLatinBuilder.setLength(trimmedLength);
        return goatLatinBuilder.toString();
    }
    
    private boolean isVowel(char c) {
        char lowerCaseChar = Character.toLowerCase(c);
        return VOWELS.contains(lowerCaseChar);
    }
}
