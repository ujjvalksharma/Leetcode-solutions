class Solution {
    public int connectSticks(int[] sticks) {
        if(sticks.length<=1){
            return 0;
        }
       PriorityQueue<Integer> pq=new PriorityQueue<Integer>();
       int minCostToConnectSticks=0;
        for(int stick: sticks){
            pq.add(stick);
        }
        while(pq.size()>1){
            
            int smallest=pq.poll();
            int secondSmallest=pq.poll();
            int stickJoinSum=smallest+secondSmallest;
            pq.add(stickJoinSum);
            minCostToConnectSticks+=stickJoinSum;
        }

        return minCostToConnectSticks;
    }
}
