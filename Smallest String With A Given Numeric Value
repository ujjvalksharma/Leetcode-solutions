class Solution {
      /* All scores:
            A:1
            B:2
            C:3
            D:4
            E:5
            F:6
            G:7
            H:8
            I:9
            J:10
            K:11
            L:12
            M:13
            N:14
            0:15
            P:16
            Q:17
            R:18
            S:19:
            T:20
            U:21
            V:22
            W:23
            X:24
            Y:25
            Z:26
            */
    /*
    In this question, we always check the maximum score we can from from the next of current location. maximum score means number of additional z we can add.
    
    */
    public String getSmallestString(int n, int k) {
        
        String answer="";
        while(n>0){
            int nextMaxScore=(n-1)*26;  // max score from next of current location
            int currentScore=1;  // suppose we are placing 'a' minimum character
            if(nextMaxScore<k){ // this means we need to place a larger character than 'a' to keep up with the score
                currentScore=k-nextMaxScore;  // score for current character
            }
           
               char c= (char) ('a'+currentScore-1); //current character
            k=k-currentScore;
            answer=answer+c;
         //    System.out.println("k:"+k+"currentScore:"+currentScore);
            n--;
        }
        
        
        return answer;
        
          
    }
}
