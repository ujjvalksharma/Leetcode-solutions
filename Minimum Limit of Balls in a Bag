/*
Simple binary search from 1 to Integer.MAX_VALUE

*/
class Solution {
    public int minimumSize(int[] nums, int maxOperations) {
        Arrays.sort(nums); 
        int left = 1;
        int right = nums[nums.length-1];
        while (left <= right) {
            int mid = left + (right - left) / 2;
            if (isValid(nums, mid, maxOperations)) {
                right = mid - 1;
            } else {
                left = mid + 1;
            }
        }
        return left;
    }
    
    private boolean isValid(int[] nums, int maxPenalty, int maxOperations) {
        int numOperations = 0;
        int len = nums.length;
        for (int i = len - 1; i >= 0; i--) {
            if (nums[i] > maxPenalty) {
                numOperations += nums[i] / maxPenalty;
                if (nums[i] % maxPenalty == 0) numOperations--;
            } else {
                break;
            }
        }
        return numOperations <= maxOperations;
    }

}
