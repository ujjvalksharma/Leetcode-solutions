class ZeroEvenOdd {
    private int n;
    private boolean zero, even, odd;
    
    public ZeroEvenOdd(int n) {
        this.n = n;
        this.zero = true;
    }

    // printNumber.accept(x) outputs "x", where x is an integer.
    public synchronized void zero(IntConsumer printNumber) throws InterruptedException {
        for (int i = 1; i <= n; i++) {
            while(!zero) wait();
            printNumber.accept(0);
            zero = false;
            even = (i % 2 == 0);
            odd = (i % 2 == 1);
            notifyAll();
        }
    }

    public synchronized void even(IntConsumer printNumber) throws InterruptedException {
        for (int i = 2; i <= n; i += 2) {
            while(!even) wait();
            printNumber.accept(i);
            zero = true;
            even = false;
            notifyAll();
        }
    }

    public synchronized void odd(IntConsumer printNumber) throws InterruptedException {
        for (int i = 1; i <= n; i += 2) {
            while(!odd) wait();
            printNumber.accept(i);
            zero = true;
            odd = false;
            notifyAll();
        }
    }
}
