class Solution {
    /*
    https://www.youtube.com/watch?v=snOaKR2xgZg&t=921s
    In this question lets say we have x^32 writing it x*x*x*x*x*x*x*x*x.... is a lot of multipleication, but we can write it as (x^2)16*(x^2)8 ...... this reduces the multiplication and it faster.
    
    */  
    public double myPowHelper(double x,long n){
       if(n == 0) return 1.0;
    if(n == 1) return x;
    if(n < 0) return myPowHelper(1/x, -n);
    double result = myPowHelper(x*x, n/2);
    if(n%2 == 1) result *= x;
    return result;
    }
    public double myPow(double x, int n) {
        
        return myPowHelper(x,n);
    }
}

/*
pow = 10 can be divied into 5 + 5. Now if we calculate the result from pow of 5 then we don't need to calculate for other pow = 5. We can simply do result*result and it is 11 then we can do result*result *x
*/
class Solution {
    
    public double myPowHelper(double x, int n){
        
        if(n == 0){
            return 1;
        }
        
        if(n == 1){
            return x;
        }
        if(n == 2){
            return x*x;
        }
        if(n%2==0){
            double result = myPowHelper(x,n/2);
            return result*result;
        }else{
            double result = myPowHelper(x,n/2);
            return result*result*x;
        }
    }
    public double myPow(double x, int n) {
        if(n<0){
            return 1/myPowHelper(x,-n);
        }
        return myPowHelper(x,n);
    }
}
