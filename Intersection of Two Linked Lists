/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
/*
youtube.com/watch?v=u4FWXfgS8jw
Move both nodes together when one of the longer link nodes reaches the end the send it to shorter linlist start which means when shorter ones completes this would be l2-l1 places ahead from start as that was the difference

*/
public class Solution {
    public ListNode getIntersectionNode(ListNode headA, ListNode headB) {
        
         ListNode pA = headA;
        ListNode pB = headB;
        while (pA != pB) {
            pA = pA == null ? headB : pA.next;
            pB = pB == null ? headA : pB.next;
        }
        return pA;
    }
}
