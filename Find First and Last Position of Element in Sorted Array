class Solution {
    public int[] searchRange(int[] nums, int target) {
        
        int[] result = new int[2];
        Arrays.fill(result, -1);
        int start = 0;
        int end = nums.length - 1;
        int leftMostIndex = Integer.MAX_VALUE;
        int rightMostIndex = Integer.MIN_VALUE;
        //find leftmost
        while(start<=end) {
            int mid = start + (end - start)/2;
            if(nums[mid] == target) {
                leftMostIndex = Math.min(leftMostIndex, mid);
                end = mid - 1;
            } else if(nums[mid] > target) {
                end = mid - 1;
            } else {
                start = mid + 1;
            }
        }
        
        if(leftMostIndex != Integer.MAX_VALUE) {
            result[0] = leftMostIndex;
        }
        
        start = 0;
        end = nums.length - 1;
        
        while(start<=end) {
            int mid = start + (end - start)/2;
            if(nums[mid] == target) {
                rightMostIndex = Math.max(rightMostIndex, mid);
                start = mid + 1;
            } else if(nums[mid] > target) {
                end = mid - 1;
            } else {
                start = mid + 1;
            }
        }
        
        if(rightMostIndex != Integer.MIN_VALUE) {
            result[1] = rightMostIndex;
        }
        return result;
    }
}
