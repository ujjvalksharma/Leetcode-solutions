class Solution {
    public int[][] merge(int[][] intervals) {
        
        Arrays.sort(intervals,(int[] a,int[] b)-> a[0]-b[0]);
        
       Stack<int[]> stkMergeInterval=new Stack<int[]>();
        
        for(int i=0;i<intervals.length;i++){
            int[] currentInterval=intervals[i];
            
            if(stkMergeInterval.isEmpty()){
                stkMergeInterval.push(currentInterval);
            }else{
                int[] prevInterval=stkMergeInterval.peek();

                if(currentInterval[0]>=prevInterval[0]&&currentInterval[0]<=prevInterval[1]){
                    int[] newInterval=new int[]{Math.min(prevInterval[0],currentInterval[0]),Math.max(currentInterval[1],prevInterval[1])};
                    stkMergeInterval.pop();
                    stkMergeInterval.push(newInterval);
                }else{
                        stkMergeInterval.push(currentInterval);
                }
            }
        }
        
          return stkMergeInterval.toArray(new int[stkMergeInterval.size()][2]);
    }
}
