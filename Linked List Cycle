/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public boolean hasCycle(ListNode head) {
        
        ListNode tempHead=head;
        ListNode slowNode=head;
        ListNode fastNode=head;
        while(slowNode!=null&&fastNode!=null&&fastNode.next!=null){
            fastNode=fastNode.next.next;
            slowNode=slowNode.next;
              if(fastNode==slowNode){
                return true;
            }
        }
        return false;
    }
}
