class LogSystem {

    Map<Integer,String> map = new HashMap<>();
    public LogSystem() {
        
    }
    
    public void put(int id, String timestamp) {
        
        map.put(id, timestamp);
        
    }
    
    public int getColonIndex(String granularity) {
        //Year:Month:Day:Hour:Minute:Second
        if("Year".equals(granularity)) {
            return 0;
        } else if("Month".equals(granularity)) {
            return 1;
        } else if("Day".equals(granularity)) {
            return 2;
        } else if("Hour".equals(granularity)) {
            return 3;
        } else if("Minute".equals(granularity)) {
            return 4;
        } else {
            return 5;
        }
    }
    
    public String getDateByIndex(String[] str, int index) {
        
        StringBuilder result = new StringBuilder("");
        
        for(int i=0; i<=index; i++) {
            result.append(str[i]);
        }
        
        return result.toString();
    }
    
    public List<Integer> retrieve(String start, String end, String granularity) {
        
        int colonIndex =  getColonIndex(granularity);
        String[] splitStart = start.split(":"); 
        String[] splitEnd = end.split(":");
        List<Integer> result = new ArrayList<Integer>();
        String startByGranularity = getDateByIndex(splitStart, colonIndex);
        String endByGranularity = getDateByIndex(splitEnd, colonIndex);
        
        for(int id :  map.keySet()) {
            
            String time = map.get(id);
            String[] splitTime = time.split(":"); 
            String timeByGranularity = getDateByIndex(splitTime, colonIndex);
            
            if (timeByGranularity.compareTo(startByGranularity)>=0 && timeByGranularity.compareTo(endByGranularity)<=0){
                 result.add(id);
            }
            
        }
        
        return result;
        
    }
}

/**
 * Your LogSystem object will be instantiated and called as such:
 * LogSystem obj = new LogSystem();
 * obj.put(id,timestamp);
 * List<Integer> param_2 = obj.retrieve(start,end,granularity);
 */
