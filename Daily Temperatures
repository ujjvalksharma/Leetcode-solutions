class Solution {
    public int[] dailyTemperatures(int[] temperatures) {
        
        Stack<Integer> indicesOfTemperatures = new Stack<Integer>();
        int[] result = new int[temperatures.length];
        for(int i=0; i<temperatures.length; i++) {
            
            if(indicesOfTemperatures.size() == 0) {
                indicesOfTemperatures.push(i);
            } else if(temperatures[i] <= temperatures[indicesOfTemperatures.peek()]){
                indicesOfTemperatures.push(i);
            } else {
                
                while(indicesOfTemperatures.size() > 0 && temperatures[indicesOfTemperatures.peek()] < temperatures[i]) {
                    int coldTempIndex = indicesOfTemperatures.pop();
                    result[coldTempIndex] = i - coldTempIndex;
                }
                indicesOfTemperatures.push(i);
            }
        }
        
        return result; 
    }
}






class Solution {
    /*
    Next greater element in array
    */
    public int[] dailyTemperatures(int[] T) {
        Stack<Integer> stk=new Stack<Integer>();
        int[] ans=new int[T.length];
        for(int i=0;i<T.length;i++){
            if(stk.isEmpty()){
                stk.add(i);
            }else{
                if(T[i]>T[stk.peek()]){
                   while(!stk.isEmpty()&&T[i]>T[stk.peek()]){
                       int smallTempIndex=stk.pop();
                       ans[smallTempIndex]=i-smallTempIndex;
                   }
                }
                stk.push(i);
            }
        }
         while(!stk.isEmpty()){
             ans[stk.pop()]=0;
         }
        return ans;
    }
}
