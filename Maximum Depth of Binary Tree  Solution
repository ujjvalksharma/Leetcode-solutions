/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    int maxDepth=0;
    
    public void findMaxDepth(TreeNode currentNode,int depth){
        if(currentNode==null){
            return;
        }
        maxDepth=Math.max(maxDepth,depth+1);
        findMaxDepth(currentNode.left,depth+1);
          findMaxDepth(currentNode.right,depth+1);
        
    }
    public int maxDepth(TreeNode root) {
        if(root==null){
            return 0;
        }
        findMaxDepth(root,0);
        return maxDepth;
        
    }
}
