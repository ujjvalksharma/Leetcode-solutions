class Solution {
    public String countAndSay(int n) {
        
        String result = "1";
        
        for(int i=1; i<n; i++) {
            result = getNextSequence(result);
        }
        
        return result;
        
    }
    
    public String getNextSequence(String s) {
        
        char prevChar = s.charAt(0);
        int freq = 1;
        StringBuilder result = new StringBuilder("");
        
        for(int i=1; i<s.length(); i++) {
            
            if(prevChar != s.charAt(i)) {
                result.append(freq).append(prevChar);
                freq = 1;
                prevChar = s.charAt(i);
            } else {
                freq++;
            }
            
        }
        
        result.append(freq).append(prevChar);

        return result.toString();
    }
}

/*
We can do it iterativly and recursivly. The idea is to start from big n and go to the base condition of n==1, then we make string for n=2, then n=3 and finally return the overall string.
*/
class Solution {
    public String countAndSay(int n) {
        
             if (n == 1) return "1";

        StringBuilder cur = new StringBuilder();
        String prev = countAndSay(n - 1);
        int count = 0;

        for (int i = 0; i < prev.length(); i++) {
            count++;

            if (i == prev.length() - 1 || prev.charAt(i) != prev.charAt(i + 1)) {
                cur.append(count).append(prev.charAt(i));
                count = 0;
            }
        }

        return cur.toString();
        
    }
}
