/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public void flatten(TreeNode root) {
        if(root == null) {
            return;
        }
        Stack<TreeNode> stk = new Stack<>();
        stk.push(root);
        TreeNode prevNode = null;
        while(!stk.isEmpty()) {
            TreeNode node = stk.pop();
            System.out.println("node : " + node.val);
            if(node.right != null) {
                stk.push(node.right);
            }
            if(node.left != null) {
                stk.push(node.left);
            }
            node.left = null;
            node.right = null;
            if(prevNode == null) {
                prevNode = node;
            } else {
                prevNode.right = node;
                prevNode = node;
            }
        }
    }
}
